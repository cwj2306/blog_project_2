package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import com.cos.model.Board;
import com.cos.util.DBClose;

public class BoardDao {
	private Connection conn; //MySQL과 연결하기 위한 객체
	private PreparedStatement pstmt; //SQL 작성을 위한 객체
	private ResultSet rs; //결과를 보관할 객체
	
	//글쓰기
	public int save(Board board) {
		conn = DBConn.getConnection();
		
		final String SQL = "INSERT INTO board(userId, title, content, createDate) VALUES(?, ?, ?, now())";
		
		try {
			pstmt = conn.prepareStatement(SQL);
			
			pstmt.setInt(1, board.getUserId());
			pstmt.setString(2, board.getTitle());
			pstmt.setString(3, board.getContent());			
			
			int result = pstmt.executeUpdate(); //변경된 튜플의 갯수 리턴
			return result;
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			DBClose.close(conn, pstmt);
		}
		
		return -1;
	}
	
	//리스트 보기
	public List<Board> findAll(){
		conn = DBConn.getConnection();
		
		final String SQL = "SELECT * FROM board ORDER BY id DESC";
		
		try {
			List<Board> boards = new ArrayList<Board>();
			
			pstmt = conn.prepareStatement(SQL);
			rs = pstmt.executeQuery();
			
			while(rs.next()) {
				
				
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			DBClose.close(conn, pstmt, rs);
		}
		
		return null;
	}
	
	//상세보기
	public Board findById(int di) {
		conn = DBConn.getConnection();
		
		final String SQL = "SELECT * FROM board WHERE id = ?";
		
try {
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			DBClose.close(conn, pstmt, rs);
		}
		
		return null;
	}
	
	
	
}
